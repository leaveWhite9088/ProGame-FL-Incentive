import matplotlib.pyplot as plt
import matplotlib

# 设置全局字体为 Times New Roman
matplotlib.rcParams['font.family'] = 'Times New Roman'
matplotlib.rcParams['font.size'] = 16  # 同时设置字体大小

# 定义用户数量
rounds = range(1, 102)

# 修改后的二维数据结构（示例包含3条折线）
data = [[0.6215, 0.758, 0.7742, 0.8335, 0.8428, 0.8458, 0.852, 0.8579, 0.8617, 0.8628, 0.8659, 0.8683, 0.8732, 0.8791,
         0.8787, 0.8857, 0.8853, 0.891, 0.8922, 0.8939, 0.8952, 0.8991, 0.9005, 0.8996, 0.9028, 0.9033, 0.9033, 0.9013,
         0.9033, 0.9009, 0.8991, 0.9047, 0.8985, 0.8988, 0.8983, 0.8963, 0.892, 0.8895, 0.8908, 0.8911, 0.8897, 0.8816,
         0.883, 0.8811, 0.8814, 0.8797, 0.8705, 0.8722, 0.8702, 0.8665, 0.8644, 0.8575, 0.8524, 0.8492, 0.8487, 0.842,
         0.8423, 0.8408, 0.838, 0.8365, 0.8329, 0.8318, 0.8298, 0.8314, 0.8275, 0.8254, 0.825, 0.8234, 0.8245, 0.8233,
         0.8224, 0.821, 0.8192, 0.8177, 0.8151, 0.8149, 0.8143, 0.8133, 0.8135, 0.8135, 0.8127, 0.8102, 0.8081, 0.811,
         0.811, 0.8084, 0.8089, 0.8095, 0.805, 0.8111, 0.807, 0.8083, 0.808, 0.804, 0.8063, 0.8058, 0.8046, 0.806,
         0.8018, 0.8092, 0.805],
        [0.497, 0.6462, 0.7452, 0.7608, 0.7637, 0.8029, 0.8213, 0.8263, 0.8332, 0.8328, 0.8401, 0.8353, 0.8397, 0.8406,
         0.8401, 0.8406, 0.8454, 0.8442, 0.8444, 0.8491, 0.8499, 0.8479, 0.8494, 0.8507, 0.8527, 0.8532, 0.8538, 0.8546,
         0.8577, 0.8586, 0.8585, 0.8611, 0.8609, 0.8668, 0.8661, 0.8682, 0.8667, 0.8707, 0.8695, 0.8734, 0.87, 0.8764,
         0.8756, 0.8778, 0.8784, 0.8794, 0.8778, 0.8822, 0.8807, 0.8795, 0.8811, 0.8882, 0.888, 0.8855, 0.8931, 0.8867,
         0.8919, 0.8885, 0.8909, 0.8932, 0.8974, 0.8935, 0.8962, 0.8943, 0.8906, 0.8979, 0.8934, 0.892, 0.8943, 0.8911,
         0.8983, 0.8979, 0.8946, 0.8981, 0.8933, 0.8984, 0.895, 0.8938, 0.8921, 0.8947, 0.891, 0.8936, 0.8889, 0.8895,
         0.8918, 0.8895, 0.8951, 0.8883, 0.8889, 0.8815, 0.8841, 0.889, 0.8872, 0.8851, 0.8844, 0.8802, 0.8854, 0.8808,
         0.8799, 0.877, 0.8748],
        [0.4831, 0.5861, 0.6736, 0.7395, 0.7546, 0.7567, 0.7577, 0.7764, 0.8069, 0.8234, 0.8285, 0.8311, 0.8344, 0.8369,
         0.8385, 0.8379, 0.8401, 0.8405, 0.8419, 0.8437, 0.8442, 0.8463, 0.8464, 0.8471, 0.8471, 0.8487, 0.849, 0.8504,
         0.8487, 0.8528, 0.8511, 0.8543, 0.8548, 0.8568, 0.8575, 0.8563, 0.8567, 0.858, 0.8615, 0.8637, 0.8633, 0.8629,
         0.8658, 0.8668, 0.866, 0.871, 0.8677, 0.8697, 0.8707, 0.8723, 0.872, 0.8718, 0.8754, 0.8748, 0.8759, 0.8782,
         0.8781, 0.8771, 0.8818, 0.8813, 0.8831, 0.8839, 0.8838, 0.8832, 0.8874, 0.8842, 0.8866, 0.8855, 0.8891, 0.8883,
         0.8867, 0.89, 0.8917, 0.8938, 0.8896, 0.8912, 0.8924, 0.8955, 0.8925, 0.8938, 0.8924, 0.8936, 0.8931, 0.8914,
         0.8917, 0.8929, 0.8888, 0.8939, 0.8955, 0.8942, 0.8927, 0.8937, 0.8951, 0.8943, 0.8964, 0.8936, 0.8956, 0.8935,
         0.8937, 0.8942, 0.8939],
        [0.4462, 0.4814, 0.5278, 0.6028, 0.6539, 0.7128, 0.7416, 0.7532, 0.7566, 0.7596, 0.7568, 0.7599, 0.7806, 0.8015,
         0.8166, 0.8251, 0.8294, 0.8315, 0.8357, 0.8373, 0.8385, 0.8401, 0.8416, 0.8422, 0.8431, 0.844, 0.8442, 0.8447,
         0.846, 0.8466, 0.8459, 0.8474, 0.8472, 0.8489, 0.8483, 0.8486, 0.8494, 0.8483, 0.8506, 0.8503, 0.8521, 0.8528,
         0.8525, 0.8526, 0.8527, 0.8544, 0.8554, 0.8553, 0.8582, 0.8582, 0.8579, 0.8575, 0.8587, 0.8607, 0.8597, 0.8608,
         0.8617, 0.8626, 0.8627, 0.8625, 0.864, 0.8635, 0.8661, 0.8661, 0.8671, 0.8683, 0.8683, 0.8677, 0.8691, 0.8697,
         0.8701, 0.8707, 0.8712, 0.8729, 0.8715, 0.8728, 0.874, 0.874, 0.8744, 0.8751, 0.8771, 0.8769, 0.8765, 0.8775,
         0.8788, 0.8791, 0.8797, 0.8805, 0.88, 0.8804, 0.881, 0.8815, 0.8808, 0.8826, 0.8829, 0.8836, 0.8838, 0.884,
         0.8856, 0.8866, 0.8846],
        [0.446, 0.4818, 0.5433, 0.612, 0.6577, 0.7189, 0.7429, 0.7557, 0.7568, 0.7579, 0.7568, 0.7625, 0.7788, 0.7961,
         0.8133, 0.8203, 0.826, 0.8299, 0.8306, 0.8327, 0.8326, 0.8356, 0.8386, 0.8379, 0.8393, 0.8399, 0.8402, 0.8428,
         0.8432, 0.8437, 0.8429, 0.8446, 0.8443, 0.8435, 0.8433, 0.8451, 0.8441, 0.845, 0.846, 0.8461, 0.8473, 0.8485,
         0.8487, 0.8485, 0.8496, 0.8508, 0.8492, 0.8518, 0.8512, 0.851, 0.8539, 0.8568, 0.8565, 0.8585, 0.8591, 0.8585,
         0.8591, 0.8608, 0.8613, 0.8611, 0.8608, 0.8621, 0.8642, 0.8645, 0.865, 0.8662, 0.8654, 0.8665, 0.8682, 0.8682,
         0.8685, 0.8696, 0.8693, 0.8692, 0.8737, 0.8717, 0.8727, 0.8745, 0.8758, 0.8732, 0.8765, 0.8781, 0.8757, 0.8796,
         0.8768, 0.8779, 0.8811, 0.8786, 0.8802, 0.8806, 0.8826, 0.882, 0.8814, 0.8819, 0.8838, 0.8839, 0.8839, 0.885,
         0.886, 0.8852, 0.8865],
        [0.4192, 0.4558, 0.477, 0.506, 0.5566, 0.6024, 0.6326, 0.677, 0.7164, 0.739, 0.748, 0.7529, 0.7542, 0.7565,
         0.7568, 0.7548, 0.7557, 0.7626, 0.7779, 0.7932, 0.8055, 0.8153, 0.8216, 0.8242, 0.8279, 0.8291, 0.832, 0.8333,
         0.8334, 0.8336, 0.835, 0.8379, 0.8384, 0.8385, 0.8404, 0.8412, 0.8415, 0.8417, 0.8423, 0.8435, 0.843, 0.8426,
         0.843, 0.843, 0.8427, 0.8427, 0.8423, 0.8445, 0.8434, 0.843, 0.844, 0.8435, 0.8437, 0.8446, 0.8433, 0.8433,
         0.8435, 0.8438, 0.845, 0.8432, 0.8479, 0.8452, 0.8468, 0.8476, 0.8477, 0.8487, 0.8478, 0.8479, 0.8502, 0.8508,
         0.8499, 0.8492, 0.8505, 0.8524, 0.8519, 0.8517, 0.8532, 0.8521, 0.8531, 0.854, 0.852, 0.8533, 0.8545, 0.8565,
         0.8555, 0.8559, 0.8567, 0.8574, 0.8585, 0.8578, 0.8578, 0.8597, 0.8598, 0.8593, 0.8598, 0.8592, 0.8605, 0.86,
         0.8607, 0.8604, 0.8612]]

styles = [
    {'color': '#1f77b4', 'marker': 'o', 'label': 'N=10'},  # 蓝色圆形
    {'color': '#ff7f0e', 'marker': 's', 'label': 'N=20'},  # 橙色方形
    {'color': '#2ca02c', 'marker': 'D', 'linestyle': ':', 'label': 'N=30'},  # 绿色菱形
    {'color': '#d62728', 'marker': '^', 'label': 'N=40'},  # 红色上三角
    {'color': '#9467bd', 'marker': 'v', 'label': 'N=50'},  # 紫色下三角
    {'color': '#8c564b', 'marker': 'P', 'label': 'N=60'}  # 棕色五边形
]

# 绘制多条折线
for line_data, style in zip(data, styles):
    plt.plot(rounds, line_data,
             color=style['color'],
             marker=style['marker'],
             markersize=2,
             label=style['label'])

# 坐标轴设置
plt.tick_params(axis='x', labelsize=14)
plt.tick_params(axis='y', labelsize=14)
plt.xlabel(r'$N$')
plt.ylabel(r'$non-two-way-selection:accuracy$')

# 显示辅助元素
plt.legend()
plt.grid(True)
plt.tight_layout()

# 显示图表
plt.show()
